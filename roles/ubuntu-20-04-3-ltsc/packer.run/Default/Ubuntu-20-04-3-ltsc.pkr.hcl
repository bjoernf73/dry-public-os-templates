variable "vcenter_server" {
  default = {}
}

variable "vcenter_cluster" {
  default = {}
}

variable "vcenter_fast_datastore" {
  default = {}
}

variable "vcenter_big_datastore" {
  default = {}
}

variable "vcenter_templates_folder" {
  default = {}
}

variable "vcenter_network" {
  default = {}
}

variable "vcenter_iso" {
  default = {}
}

# users and passwords
variable "vcenter_username" {
  default = {}
}

variable "vcenter_password" {
  default = {}
}

variable "ssh_username" {
  default = {}
}

variable "ssh_password" {
  default = {}
}

variable "resource_name" {
  default = {}
}

variable "vcenter_template" {
  default = {}
}

# This file was autogenerated by the 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/source
source "vsphere-iso" "ubuntu-20-04-3-ltsc" {
  CPUs                 = 2
  NestedHV             = false
  RAM                  = 2048
  RAM_reserve_all      = true
  boot_command         = ["<enter><wait><enter><wait><f6><wait><esc><wait> ", "autoinstall ds=nocloud-net;s=http://{{ .HTTPIP }}:{{ .HTTPPort }}/", "<enter>"]
  boot_wait            = "4s"
  cluster              = "${var.vcenter_cluster}"
  communicator         = "ssh"
  convert_to_template  = true
  cpu_cores            = 2
  datastore            = "${var.vcenter_fast_datastore}"
  disk_controller_type = [ "pvscsi" ]
  firmware             = "bios"
  folder               = "${var.vcenter_templates_folder}"
  guest_os_type        = "ubuntu64Guest"
  http_directory       = ".\\"
  insecure_connection  = true
  ip_settle_timeout    = "3m"
  ip_wait_timeout      = "40m"
  iso_paths            = ["${var.vcenter_iso}"]
  network_adapters {
    network      = "${var.vcenter_network}"
    network_card = "vmxnet3"
  }
  vcenter_server = "${var.vcenter_server}"
  password               = "${var.vcenter_password}"
  ssh_handshake_attempts = "100"
  ssh_password           = "${var.ssh_password}"
  ssh_timeout            = "45m"
  ssh_username           = "${var.ssh_username}"
  storage {
    disk_size             = 100000
    disk_thin_provisioned = true
  }
  username       = "${var.vcenter_username}"
  
  vm_name        = "${var.vcenter_template}"
  vm_version     = 19
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/build
build {
  sources = ["source.vsphere-iso.ubuntu-20-04-3-ltsc"]

  provisioner "shell" {
    inline = ["echo '${var.ssh_password}' | sudo -S apt update", "echo '${var.ssh_password}' | sudo -S apt upgrade -y"]
  }

  provisioner "shell" {
    inline       = ["echo '${var.ssh_password}' | sudo -S apt install net-tools ifupdown mlocate open-vm-tools perl -y"]
    pause_after  = "2s"
    pause_before = "5s"
  }

  provisioner "shell" {
    inline       = ["echo '${var.ssh_password}' | sudo -S apt purge cloud-init -y"]
    pause_after  = "1s"
    pause_before = "1s"
  }

  provisioner "shell" {
    inline       = ["echo '${var.ssh_password}' | sudo -S timedatectl set-timezone 'Europe/Oslo'"]
    pause_before = "10s"
  }

  provisioner "shell" {
    inline       = ["echo '${var.ssh_password}' | sudo -S lvextend -l +100%FREE /dev/ubuntu-vg/ubuntu-lv"]
    pause_before = "3s"
  }

  provisioner "shell" {
    inline       = ["echo '${var.ssh_password}' | sudo -S resize2fs /dev/ubuntu-vg/ubuntu-lv"]
    pause_before = "3s"
  }

  provisioner "shell" {
    inline       = ["echo '${var.ssh_password}' | sudo -S apt-get install sssd-ad sssd-tools realmd adcli ntpdate smbclient -y"]
    pause_before = "3s"
  }

  provisioner "shell" {
    inline       = ["echo '${var.ssh_password}' | sudo -S sed -i 's/Ubuntu 20.04/Ubuntu 18.04/' /etc/issue"]
    pause_before = "3s"
  }

  provisioner "shell" {
    expect_disconnect = true
    inline            = ["echo '${var.ssh_password}' | sudo -S reboot"]
    pause_before      = "3s"
  }

  provisioner "shell" {
    inline       = ["while [ ! $(systemctl is-active open-vm-tools) = \"active\" ]; do sleep 1; done"]
    pause_after  = "30s"
    pause_before = "2s"
  }
}